import java.util.LinkedList;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author liorz
 */
public class ActionItems_GUI extends javax.swing.JFrame {

	/**
	 * Creates new form Resources
	 */
	public ActionItems_GUI() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		pageName = new java.awt.Label();
		deliverablesButton = new javax.swing.JButton();
		tasksButton = new javax.swing.JButton();
		actionItemsButton = new javax.swing.JButton();
		issuesButton = new javax.swing.JButton();
		resourcesButton = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		table = new javax.swing.JTable();
		createButton = new javax.swing.JButton();
		updateButton = new javax.swing.JButton();
		deleteButton = new javax.swing.JButton();
		editButton = new javax.swing.JButton();
		homeButton = new javax.swing.JButton();
		resource_Info = new java.awt.Panel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		pageName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
		pageName.setMinimumSize(new java.awt.Dimension(40, 20));
		pageName.setName(""); // NOI18N
		pageName.setPreferredSize(new java.awt.Dimension(40, 20));
		pageName.setText("Action Items");

		deliverablesButton.setText("Deliverables");
		deliverablesButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				DeliverablesButtonActionPerformed(evt);
			}
		});

		tasksButton.setText("Tasks");
		tasksButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				TasksButtonActionPerformed(evt);
			}
		});

		actionItemsButton.setText("Action Items");

		issuesButton.setText("Issues");
		issuesButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				IssuesButtonActionPerformed(evt);
			}
		});

		resourcesButton.setText("Resources");
		resourcesButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ResourcesButtonActionPerformed(evt);
			}
		});

		table.setModel(new javax.swing.table.DefaultTableModel(
				new Object [][] {},
				new String [] {
						"Status", "Name", "Resource", "Start Date", "End Date"
				}
				) {
			Class[] types = new Class [] {
					java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
			};
			boolean[] canEdit = new boolean [] {
					false, false, false, false, false, false
			};

			public Class getColumnClass(int columnIndex) {
				return types [columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit [columnIndex];
			}
		});
		this.model = (DefaultTableModel) table.getModel();
		table.getTableHeader().setReorderingAllowed(false);
		jScrollPane1.setViewportView(table);

		createButton.setText("Create");
		createButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				CreateButtonActionPerformed(evt);
			}
		});

		updateButton.setText("Update");
		updateButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				UpdateButtonActionPerformed(evt);
			}
		});

		deleteButton.setText("Delete");
		deleteButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteButtonActionPerformed(evt);
			}
		});

		editButton.setText("Edit");
		editButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				EditButtonActionPerformed(evt);
			}
		});

		homeButton.setText("Home");
		homeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				HomeButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout resource_InfoLayout = new javax.swing.GroupLayout(resource_Info);
		resource_Info.setLayout(resource_InfoLayout);
		resource_InfoLayout.setHorizontalGroup(
				resource_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 0, Short.MAX_VALUE)
				);
		resource_InfoLayout.setVerticalGroup(
				resource_InfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 119, Short.MAX_VALUE)
				);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(deliverablesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(tasksButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(actionItemsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
												.addComponent(issuesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(resourcesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
										.addGap(10, 10, 10))
								.addGroup(layout.createSequentialGroup()
										.addComponent(pageName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
										.addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(109, 109, 109)
										.addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(105, 105, 105)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(homeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)))
								.addComponent(resource_Info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 824, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(0, 0, Short.MAX_VALUE))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(layout.createSequentialGroup()
										.addComponent(homeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
														.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
														.addComponent(updateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
												.addComponent(createButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addComponent(pageName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addComponent(deliverablesButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(tasksButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(actionItemsButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(issuesButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(resourcesButton))
								.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(2, 2, 2)
						.addComponent(resource_Info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap())
				);

		pack();
	}// </editor-fold>

	private void TableMouseClicked(java.awt.event.MouseEvent evt) {
		this.selectedRowIndex = table.getSelectedRow();
	}

	private void DeliverablesButtonActionPerformed(java.awt.event.ActionEvent evt) {
		Deliverables_GUI deliverables = new Deliverables_GUI();
		deliverables.setVisible(true);
		setVisible(false);
	}

	private void TasksButtonActionPerformed(java.awt.event.ActionEvent evt) {
		Task_GUI task=new Task_GUI();
		task.setVisible(true);
		setVisible(false);
	}

	private void ResourcesButtonActionPerformed(java.awt.event.ActionEvent evt) {
		Resources_GUI resource=new Resources_GUI();
		resource.setVisible(true);
		setVisible(false);
	}

	private void IssuesButtonActionPerformed(java.awt.event.ActionEvent evt) {
		Issues_GUI issues = new Issues_GUI();
		issues.setVisible(true);
		setVisible(false);
	}


	private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {
		String [] inputs = inputAdd();
		//Tasks task = new Tasks(inputs[0],inputs[2],inputs[3],inputs[1]);
		// this.tasks.add(task);
		//LinkedList <ActionItems> actionItems = new LinkedList<ActionItems>();
    ActionItems actionItem = new ActionItems(inputs[0], inputs[1],inputs[2],inputs[3],inputs[4],inputs[5],
                                            inputs[6],inputs[7],inputs[8],inputs[9]);
		Object[] row = new Object [5];
		//for (int i=0;i<actionItems.size();i++) {
  		// row[0] = actionItems.get(i).generateUniqueID();
  		// row[1] = actionItems.get(i).getName();
  		// row[2] = actionItems.get(i).getDescription();
  		// row[3] = actionItems.get(i).getTodayDate();
  		// row[4] = actionItems.get(i).getResources();
  		// row[5] = actionItems.get(i).getDateAssigned();
  		// row[6] = actionItems.get(i).getExpectedCompletionDate();
  		// row[7] = actionItems.get(i).getActualCompletionDate();
      // row[8] = actionItems.get(i).getStatus();
  		// row[9] = actionItems.get(i).getStatusDescription();
  		// row[10] = actionItems.get(i).getStatus();
  		// row[11] = actionItems.get(i).getUpdateDate();
      //row[0] = ActionItems.generateUniqueID();
      row[0] = inputs[7]; //status
  		row[1] = inputs[0]; //name
      row[2] = inputs[3]; //resource
      row[3] = inputs[2]; //dateCreated
      row[4] = inputs[5]; //expected
  		// row[2] = inputs[1]; //description
  		// row[5] = inputs[4]; //dateAssigned
  		// row[7] = inputs[6]; //actual
  		// row[9] = inputs[8]; //statusDescription
  		// row[10] = inputs[9];//updateDate
		// row[8] = ActionItem.get(i).
		// row[9] = ActionItem.get(i).
		//}
		model.addRow(row);
	}

	private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {
		//this.tasks.remove(selectedRowIndex);
		model.removeRow(selectedRowIndex);
	}

	private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {
		HomePage home=new HomePage();
		home.setVisible(true);
		setVisible(false);
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ActionItems_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ActionItems_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ActionItems_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ActionItems_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ActionItems_GUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton actionItemsButton;
	private javax.swing.JButton createButton;
	private javax.swing.JButton deleteButton;
	private javax.swing.JButton deliverablesButton;
	private javax.swing.JButton editButton;
	private javax.swing.JButton homeButton;
	private javax.swing.JButton issuesButton;
	private java.awt.Label pageName;
	private javax.swing.JButton resourcesButton;
	private javax.swing.JButton tasksButton;
	private javax.swing.JButton updateButton;
	private javax.swing.JScrollPane jScrollPane1;
	private java.awt.Panel resource_Info;
	private javax.swing.JTable table;
	private DefaultTableModel model;
	int selectedRowIndex;
	// End of variables declaration


	public static String[] inputAdd() {
		String[] strings = new String[10];
		JTextField nameTemp= new JTextField(20);
		JTextField descriptionTemp = new JTextField(50);
		JTextField todayDateTemp = new JTextField(10); //date created
		JTextField resourceTemp = new JTextField(20);
		JTextField dateAssignedTemp = new JTextField(10);
		JTextField expectionTemp= new JTextField(10);
		JTextField actualDateTemp = new JTextField(10);
		JTextField statusTemp = new JTextField(10);
		JTextField sDescriptionTemp = new JTextField(50);
		JTextField updateDateTemp = new JTextField(10);
		Object[] fields= {"Create a new Action Item","Name",nameTemp,"Description",descriptionTemp,"Date Created",todayDateTemp,
				"Resource",resourceTemp,"Date Assigned",dateAssignedTemp,"Expected Completion Date",expectionTemp,
				"Actual Completion Date", actualDateTemp, "Status",statusTemp,"Status Description",sDescriptionTemp,"Update Date",updateDateTemp};
		//Input message with the textfields
		int result = JOptionPane.showConfirmDialog(null, fields,
				"Add Product", JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE);
		if (result == JOptionPane.OK_OPTION) {
			String name = nameTemp.getText();
			String description = descriptionTemp.getText();
			String dateCreated = todayDateTemp.getText();
			String resource = resourceTemp.getText();
			String dateAssigned = dateAssignedTemp.getText();
			String expected=expectionTemp.getText();
			String actual=actualDateTemp.getText();
			String assignedDate  = dateAssignedTemp.getText();
			String status = statusTemp.getText();
			String statusDescription=sDescriptionTemp.getText();
			String updateDate=updateDateTemp.getText();
			//String end  = endTemp.getText();
			//if the user hasn't entered anything and clicked OK
			if (name == "" || description =="" || resource =="" || expected == "" || actual =="" || status =="" || statusDescription == "") {
				JOptionPane.showMessageDialog(null, "Wrong input\n\n try Again");
				//restarting the method.
				inputAdd();
			}


			//strings[0] = ActionItems.generateUniqueID();
			strings[0] = name;
			strings[1] = description;
			strings[2] = dateCreated;
			strings[3] = resource;
			strings[4] = dateAssigned;
			strings[5] = expected;
			strings[6] = actual;
			strings[7] = status;
			strings[8] = statusDescription;
      strings[9] = updateDate;
		}
		return strings;
	}
}
